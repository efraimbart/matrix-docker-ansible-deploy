#jinja2: lstrip_blocks: "True"
[Unit]
Description=Matrix Mautrix Amp puppeteer

{% for service in matrix_mautrix_amp_puppeteer_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}

{% for service in matrix_mautrix_amp_puppeteer_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}

[Service]
Type=simple
Environment="HOME={{ matrix_systemd_unit_home_path }}"

ExecStartPre=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} kill matrix-mautrix-amp-puppeteer 2>/dev/null'
ExecStartPre=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} rm matrix-mautrix-amp-puppeteer 2>/dev/null'

# Intentional delay, so that the homeserver (we likely depend on) can manage to start.
ExecStartPre={{ matrix_host_command_sleep }} 5

# We can't use `--read-only` for this bridge.
ExecStart={{ matrix_host_command_docker }} run --rm --name matrix-mautrix-amp-puppeteer \
			--log-driver=none \
			--user={{ matrix_user_uid }}:{{ matrix_user_gid }} \
			--cap-drop=ALL \
			--network={{ matrix_docker_network }} \
			-v {{ matrix_mautrix_amp_puppeteer_path }}:/puppeteer:z \
			{{ matrix_mautrix_amp_puppeteer_docker_image }} \
			yarn start --config /puppeteer/config.json --browser /usr/lib/chromium/chrome --no-sandbox

ExecStop=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} kill matrix-mautrix-amp-puppeteer 2>/dev/null'
ExecStop=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} rm matrix-mautrix-amp-puppeteer 2>/dev/null'

Restart=always
RestartSec=30
SyslogIdentifier=matrix-mautrix-amp-puppeteer

[Install]
WantedBy=multi-user.target
